version: 0.1
component: build
timeoutInSeconds: 3600
shell: bash
failImmediatelyOnError: true

env:
  variables:
    REGISTRY: "mx-queretaro-1.ocir.io"
    NAMESPACE: "axxjocxrvfar"
    REPO: "todolistapp-springboot"
  exportedVariables:
    - BUILDRUN_HASH
    - IMAGE_TAG
    - FULL_IMAGE_URI

steps:
  - type: Command
    name: "Setup Java Environment"
    command: |
      echo "‚òï Checking Java environment..."
      java -version
      javac -version
      mvn -version
      echo "Current JAVA_HOME: $JAVA_HOME"
      
      # Check available Java installations
      echo "Available Java versions:"
      ls -la /usr/lib/jvm/ 2>/dev/null || echo "No /usr/lib/jvm/ directory found"
      which java
      which javac

  - type: Command
    name: "Login to OCIR"
    command: |
      echo "üîë Autenticando en OCIR..."
      echo "${auth_token_ocir}" \
        | docker login "${REGISTRY}" \
            -u "${user_ocir}" \
            --password-stdin

  - type: Command
    name: "Define unique image tag"
    timeoutInSeconds: 40
    command: |
      # Use build run ID for unique tagging
      BUILDRUN_HASH=$(echo "${OCI_BUILD_RUN_ID}" | rev | cut -c 1-7)
      IMAGE_TAG="${BUILDRUN_HASH}-$(date +%Y%m%d%H%M%S)"
      FULL_IMAGE_URI="${REGISTRY}/${NAMESPACE}/${REPO}:${IMAGE_TAG}"
      
      echo "BUILDRUN_HASH=${BUILDRUN_HASH}"
      echo "IMAGE_TAG=${IMAGE_TAG}"
      echo "FULL_IMAGE_URI=${FULL_IMAGE_URI}"

  - type: Command
    name: "Build Maven Application"
    command: |
      cd MtdrSpring/backend
      echo "üì¶ Building Maven application..."
      
      # Use system default Java (likely Java 11 or 17)
      mvn clean package -DskipTests

  - type: Command
    name: "Build & Push Docker Image"
    command: |
      cd MtdrSpring/backend

      echo "üê≥ Building Docker image..."
      
      # 1) Pull latest for cache (ignore errors if doesn't exist)
      docker pull "${REGISTRY}/${NAMESPACE}/${REPO}:latest" || echo "No latest image found for cache"

      # 2) Build with cache and unique tag
      docker build \
        --cache-from "${REGISTRY}/${NAMESPACE}/${REPO}:latest" \
        --file Dockerfile \
        --tag "${FULL_IMAGE_URI}" \
        --tag "${REGISTRY}/${NAMESPACE}/${REPO}:latest" \
        .

      # 3) Push both tags
      echo "üì§ Pushing image with tag: ${IMAGE_TAG}"
      docker push "${FULL_IMAGE_URI}"
      
      echo "üì§ Pushing latest tag..."
      docker push "${REGISTRY}/${NAMESPACE}/${REPO}:latest"

  - type: Command
    name: "Verify Image Push"
    command: |
      echo "‚úÖ Image successfully pushed:"
      echo "   - Unique tag: ${FULL_IMAGE_URI}"
      echo "   - Latest tag: ${REGISTRY}/${NAMESPACE}/${REPO}:latest"
      
      # Test image pull to verify it's available
      docker pull "${FULL_IMAGE_URI}"
      echo "‚úÖ Image verified and ready for deployment"

outputArtifacts:
  - name: todolist-image-latest
    type: DOCKER_IMAGE
    location: "${REGISTRY}/${NAMESPACE}/${REPO}:latest"
  - name: todolist-image-tagged
    type: DOCKER_IMAGE
    location: "${FULL_IMAGE_URI}"
